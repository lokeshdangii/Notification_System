1. One script that will trigger Notification Service (API Calling by script)
2. Logging
3. Scalability
4. Rate Limiting


Done:


Logging✅:

    Log in console✅
    Log FileHandler✅
    Log Rotation✅
    Error Logs✅
queue✅




CMDs:

command to run celery: 
++++++++++++++++++++++

celery -A tasks worker --loglevel=info

Dockerize:


docker build -t notification_system .
docker run -p 5000:5000 notification_system


Docker compose commands
+++++++++++++++++++++++

docker-compose build: 	                        Only builds images (doesn't start containers).
docker-compose up: 	                            Starts containers, but only if images already exist.
docker-compose up --build: 	                    Builds images (if needed) and then runs everything — best choice!
docker-compose up --build --force-recreate:     to force Docker to rebuild and recreate containers!


K8S
+++

kubectl apply -f k8s-deployment.yaml
kubectl get pods
kubectl get svc


Docker Installation 
++++++++++++++++++++

sudo apt update
sudo apt install docker.io -y
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker ubuntu
newgrp docker

sudo apt install docker-compose -y


Docker image pulling
++++++++++++++++++++

docker pull lokeshdangi/notification_system_flask_app:latest
docker pull lokeshdangi/notification_system_celery_worker:latest
docker pull redis:7-alpine



Docker run
+++++++++++


1. Run Redis container first (because your app and celery need Redis)
docker run -d \
  --name notification_redis \
  -p 6379:6379 \
  redis:7-alpine


2. Run Flask App container
docker run -d \
  --name flask-app \
  --link notification_redis:notification_redis \
  -p 5000:5000 \
  lokeshdangi/notification_system_flask_app:latest


3. Start the Celery worker container (also needs Redis):

docker run -d \
  --name celery-worker \
  --link notification_redis:notification_redis \
  lokeshdangi/notification_system_celery_worker:latest \
  celery -A api.celery_app worker --loglevel=info


docker run -d \
  --name celery-worker \
  --link notification_redis:notification_redis \
  lokeshdangi/notification_system_celery_worker:latest



To delete container
++++++++++++++++++++


docker rm -f notification_redis flask-app celery-worker



1. ✅ How to pass .env file in Docker

docker run --env-file .env -p 5000:5000 your-image-name


Full Example:
+++++++++++++

docker build -t notification-system .
docker run --env-file .env -p 5000:5000 notification-system






Google:
+++++++

mywf hxnw hnwv xvpw
smtp.gmail.com
lokeshdangi1045@gmail.com
547






Learnings:

Queue implementation
Rate Limiting
Importance of Scalability
Adapter Pattern
Dockerize python application
AWS CloudWatch
To use mail service domain is important




Failure:

Can't get AWS SES Production acess
Sendring Login problem
Mailchimp


